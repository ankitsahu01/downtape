{"version":3,"sources":["components/Test.js","App.js","reportWebVitals.js","index.js"],"names":["sToTime","duration","seconds","parseInt","minutes","hours","Test","useState","videoUrl","setVideoUrl","videoDetails","setVideoDetails","links","setLinks","itag","setItag","searchVideoFormSubmit","e","a","preventDefault","axios","get","trim","res","data","console","log","title","thumbnail","lengthSeconds","filter","link","type","hasVideo","hasAudio","map","qualityLabel","DownloadVideoForm","src","className","alt","onSubmit","DownloadVideoFormSubmit","onChange","target","value","handleSelectOption","index","window","location","href","action","method","required","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAGMA,EAAQ,SAACC,GACX,IAAIC,EAASC,SAASF,EAAW,IAC7BG,EAASH,EAAW,GACpBI,EAAOF,SAASC,EAAU,IAO9B,OAJAC,EAASA,EAAQ,GAAM,IAAMA,EAAQA,GAItB,KAHfD,GAHAA,EAASD,SAASC,EAAU,KAGP,GAAM,IAAMA,EAAUA,GAGZ,KAF/BF,EAAWA,EAAU,GAAM,IAAMA,EAAUA,IAmFhCI,EA9EF,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACRC,EADQ,KACEC,EADF,OAEyBF,mBAAS,MAFlC,mBAERG,EAFQ,KAEMC,EAFN,OAGWJ,mBAAS,MAHpB,mBAGRK,EAHQ,KAGDC,EAHC,OAISN,mBAAS,MAJlB,mBAIRO,EAJQ,KAIFC,EAJE,KAWTC,EAAqB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAC1BD,EAAEE,iBADwB,SAETC,IAAMC,IAAN,8CAAiDb,EAASc,SAFjD,OAEpBC,EAFoB,OAGpBC,EAAMD,EAAIC,KAChBC,QAAQC,IAAIF,GACZb,EAAgB,CAAEgB,MAAMH,EAAKG,MAAOC,UAAUJ,EAAKI,UAAW3B,SAASD,EAAQwB,EAAKK,iBACpFhB,EAASW,EAAKZ,MAAMkB,QAAO,SAAAC,GACvB,MAAqB,QAAdA,EAAKC,MAAkBD,EAAKE,UAAYF,EAAKG,YACrDC,KAAI,SAAAJ,GACH,MAAO,CAAEC,KAAKD,EAAKC,KAAMI,aAAaL,EAAKK,aAActB,KAAKiB,EAAKjB,UAGpEF,GACCG,EAAQH,EAAM,GAAGE,MAbK,2CAAH,sDAiBrBuB,EAAkB,WACpB,OAAIzB,EAEA,qCACA,6BAAKF,EAAaiB,QAClB,qBAAKW,IAAK5B,EAAakB,UAAWW,UAAU,YAAYC,IAAK9B,EAAaiB,QAC1E,0CAAajB,EAAaT,YAC1B,uBAAMwC,SAAUC,EAAhB,UACI,wBAAQC,SAAU,SAAA1B,GAAC,OA9BN,SAACA,GACtB,IAAMH,EAAMG,EAAE2B,OAAOC,MACrB9B,EAAQD,GA4BqBgC,CAAmB7B,IAAI4B,MAAO/B,EAAnD,SAEIF,EAAMuB,KAAI,SAACJ,EAAMgB,GACb,OACI,yBAAoBF,MAAOd,EAAKjB,KAAhC,UACKiB,EAAKC,KADV,MACmBD,EAAKK,eADXW,QAOzB,wBAAQR,UAAU,gBAAlB,4BAlBU,IAwBhBG,EAAuB,uCAAG,WAAOzB,GAAP,SAAAC,EAAA,sDAC5BD,EAAEE,iBACFM,QAAQC,IAAIZ,GACZkC,OAAOC,SAASC,KAAhB,UAAwBF,OAAOC,SAASC,KAAxC,qCAAyE1C,EAAzE,iBAA0FM,GAH9D,2CAAH,sDAM7B,OACI,qCACC,sBAAKyB,UAAU,sBAAf,UACG,oBAAIA,UAAU,UAAd,sCACA,uBAAMY,OAAO,GAAGC,OAAO,OAAOb,UAAU,SAASE,SAAUzB,EAA3D,UACI,uBAAOgB,KAAK,OAAOO,UAAU,YAAYc,UAAU,EAC/CC,YAAY,6DACRT,MAAOrC,EAAUmC,SAAU,SAAC1B,GAAD,OAAKR,EAAYQ,EAAE2B,OAAOC,UAE7D,wBAAQN,UAAU,gBAAlB,0BAGR,qBAAKA,UAAU,YAAf,SACI,cAACF,EAAD,UC1EGkB,MATf,WACE,OACE,mCAEE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1Bb,M","file":"static/js/main.68035dc8.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst sToTime=(duration)=> {\r\n    let seconds= parseInt(duration % 60);\r\n    let minutes= duration / 60;\r\n    let hours= parseInt(minutes / 60);\r\n    minutes= parseInt(minutes % 60);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n  \r\n    return(hours + \":\" + minutes + \":\" + seconds);\r\n}\r\n\r\nconst Test = () => {\r\n    const [videoUrl, setVideoUrl] = useState('');\r\n    const [videoDetails, setVideoDetails] = useState(null);\r\n    const [links, setLinks] = useState(null);\r\n    const [itag, setItag] = useState(null);\r\n\r\n    const handleSelectOption=(e)=>{\r\n        const itag= e.target.value;\r\n        setItag(itag);\r\n    }\r\n    \r\n    const searchVideoFormSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        const res= await axios.get(`/api/youtube/video-requiredInfo?url=${videoUrl.trim()}`);\r\n        const data= res.data;\r\n        console.log(data);\r\n        setVideoDetails({ title:data.title, thumbnail:data.thumbnail, duration:sToTime(data.lengthSeconds) });\r\n        setLinks(data.links.filter(link=>{\r\n            return link.type === \"mp4\" && link.hasVideo && link.hasAudio\r\n        }).map(link=>{\r\n            return({ type:link.type, qualityLabel:link.qualityLabel, itag:link.itag })\r\n        })\r\n        )\r\n        if(links){\r\n            setItag(links[0].itag);\r\n        }\r\n    }\r\n\r\n    const DownloadVideoForm=()=>{\r\n        if(!links){return ''}\r\n        return(\r\n            <>\r\n            <h2>{videoDetails.title}</h2>\r\n            <img src={videoDetails.thumbnail} className=\"thumbnail\" alt={videoDetails.title} />\r\n            <p>Duration {videoDetails.duration}</p>\r\n            <form onSubmit={DownloadVideoFormSubmit}>\r\n                <select onChange={e=>handleSelectOption(e)} value={itag} >\r\n                {\r\n                    links.map((link, index)=>{\r\n                        return(\r\n                            <option key={index} value={link.itag}>\r\n                                {link.type} - {link.qualityLabel}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n                </select>\r\n                <button className=\"btn green-btn\">Download</button>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const DownloadVideoFormSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        console.log(itag);\r\n        window.location.href=`${window.location.href}/api/youtube/download?url=${videoUrl}&itag=${itag}`;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n         <div className=\"container hv-center\">\r\n            <h1 className=\"heading\">YouTube Video Downloader</h1>\r\n            <form action=\"\" method=\"POST\" className=\"s-form\" onSubmit={searchVideoFormSubmit}>\r\n                <input type=\"text\" className=\"url-input\" required={true}\r\n                    placeholder=\"Video URL e.g. https://www.youtube.com/watch?v=wAD9uO9YAQw\" \r\n                        value={videoUrl} onChange={(e)=>setVideoUrl(e.target.value)}\r\n                    />\r\n                <button className=\"btn green-btn\">Search</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"container\">\r\n            <DownloadVideoForm/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test;\r\n","import './App.css';\nimport React from 'react';\nimport HomePage from './components/HomePage';\nimport Test from './components/Test';\n\nfunction App(){\n  return(\n    <>\n      {/* <HomePage/> */}\n      <Test/>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}