{"version":3,"sources":["components/Navbar.js","reducers/YoutubeReducer.js","components/Converters.js","components/HomePage.js","components/Test2.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Slide","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","HideOnScroll","appear","direction","Navbar","AppBar","Toolbar","Typography","variant","id","Fab","color","size","aria-label","initialVideo","reducer","video","action","type","itag","parseInt","payload","contentLength","formats","filter","format","map","sToTime","duration","seconds","minutes","hours","bytesToMb","bytes","toFixed","paper","marginTop","display","flexDirection","alignItems","form","width","btn","padding","videoDetailsContainer","marginBottom","formControl","margin","downloadDropdownForm","justifyContent","HomePage","Text2","useReducer","dispatch","searchVideo","e","a","preventDefault","axios","get","url","trim","res","data","title","thumbnail","lengthSeconds","hasVideo","hasAudio","response","status","toast","error","ShowVideoDetailsContainer","length","Container","component","maxWidth","Grid","container","item","xs","sm","ImageList","ImageListItem","style","src","details","alt","ImageListItemBar","subtitle","FormControl","InputLabel","htmlFor","Select","labelId","value","toDownload","label","onChange","index","MenuItem","qualityLabel","downloadVideo","extendedIcon","location","href","noValidate","onSubmit","TextField","fullWidth","autoFocus","required","placeholder","LinearProgress","toggleLoader","Button","App","createTheme","palette","primary","main","success","red","A400","youtube","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.2d055717.chunk.js","sourcesContent":["import React from 'react';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport {Fab, Slide} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n    if(anchor){\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n  return (\r\n    <Slide in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root} >\r\n        {children}\r\n      </div>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <HideOnScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">AIOV-Downloader</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <ScrollTop {...props}>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// import React from 'react';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n// import Slide from '@material-ui/core/Slide';\r\n\r\n// function HideOnScroll(props) {\r\n//   const { children, window } = props;\r\n//   const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n//   return (\r\n//     <Slide appear={false} direction=\"down\" in={!trigger}>\r\n//       {children}\r\n//     </Slide>\r\n//   );\r\n// }\r\n\r\n// export default function Navbar(props) {\r\n//   return (\r\n//     <>\r\n//       <HideOnScroll {...props}>\r\n//         <AppBar>\r\n//           <Toolbar>\r\n//             <Typography variant=\"h6\">Scroll to Hide App Bar</Typography>\r\n//           </Toolbar>\r\n//         </AppBar>\r\n//       </HideOnScroll>\r\n//       <Toolbar />\r\n//     </>\r\n//   );\r\n// }\r\n","export const initialVideo={\r\n    'toggleLoader':{ 'display':'none' },\r\n    'url': '',\r\n    'toDownload': { 'itag':'', 'contentLength':'' },\r\n    'details': {},\r\n    'formats':[]\r\n}\r\n\r\nexport const reducer = (video, action) => {\r\n    if(action.type && action.type===\"toDownload\"){\r\n        const itag= parseInt(action.payload.itag);\r\n        const contentLength= video.formats.filter((format)=>{\r\n            return format.itag===itag\r\n        }).map((format)=>{return format.contentLength})[0];\r\n        video= { ...video, [action.type]:{itag, contentLength:parseInt(contentLength)}}\r\n    }else if(action.type){\r\n        video= { ...video, [action.type]:action.payload };\r\n    }\r\n    return video;\r\n}","export const sToTime=(duration)=> {\r\n    let seconds= parseInt(duration % 60);\r\n    let minutes= duration / 60;\r\n    let hours= parseInt(minutes / 60);\r\n    minutes= parseInt(minutes % 60);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return(hours + \":\" + minutes + \":\" + seconds);\r\n}\r\n\r\nexport const bytesToMb=(bytes)=>{\r\n    const mb= bytes/1024/1024;\r\n    return mb.toFixed(1);\r\n}","import React, {useReducer} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Button, TextField, Typography, Grid} from '@material-ui/core';\r\nimport { InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport {ImageList, ImageListItem, ImageListItemBar} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GetAppRoundedIcon from '@material-ui/icons/GetAppRounded';\r\nimport axios from 'axios';\r\nimport { initialVideo, reducer } from '../reducers/YoutubeReducer';\r\nimport { sToTime, bytesToMb } from './Converters';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    btn: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(1.9),\r\n    },\r\n    videoDetailsContainer: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    downloadDropdownForm:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center'\r\n    }\r\n}));\r\n\r\nfunction HomePage() {\r\n    const [video, dispatch] = useReducer(reducer, initialVideo);\r\n    const classes = useStyles();\r\n\r\n    const searchVideo = async (e)=>{\r\n        e.preventDefault();\r\n        const res= await axios.get(`/api/youtube/video-requiredInfo?url=${video.url.trim()}`);\r\n        const data= res.data;\r\n        // console.log(data);\r\n        let {title, thumbnail, lengthSeconds} = data;\r\n        dispatch( {type:\"details\", payload:{title, thumbnail, duration:sToTime(lengthSeconds)}} );\r\n        const formats = data.formats.filter(format=>{\r\n            return format.type === \"mp4\" && format.hasVideo && format.hasAudio\r\n        });\r\n        // console.log(formats);\r\n        dispatch( {type:\"formats\", payload:formats} );\r\n        dispatch( { type:\"toDownload\", payload:{ 'itag':formats[0].itag } } );\r\n    }\r\n\r\n    const ShowVideoDetailsContainer=()=>{\r\n        if(!video.formats.length){return ''}\r\n        return(\r\n            <>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n            <div className={classes.videoDetailsContainer}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <ImageList>\r\n                            <ImageListItem style={{'width':'100%'}}>\r\n                                <img src={video.details.thumbnail} alt={video.details.title} />\r\n                                <ImageListItemBar title={video.details.title} subtitle={<span>Duration: {video.details.duration}</span>} />\r\n                            </ImageListItem>\r\n                        </ImageList>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} className={classes.downloadDropdownForm}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"quality-dropdown\">Quality</InputLabel>\r\n                            <Select\r\n                            labelId=\"quality-dropdown\"\r\n                            value={video.toDownload.itag}\r\n                            label=\"Quality\"\r\n                            onChange={e=>dispatch({ type:'toDownload', payload:{'itag':e.target.value} })}\r\n                            >\r\n                            {\r\n                                video.formats.map((format, index)=>{\r\n                                    return(\r\n                                        <MenuItem key={index} value={format.itag}>\r\n                                            {format.type} - {format.qualityLabel} {format.contentLength ? ` - ${bytesToMb(format.contentLength)} MB` : ''}\r\n                                        </MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Fab\r\n                        variant=\"extended\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"download\"\r\n                        onClick={downloadVideo}\r\n                        className={classes.btn}\r\n                        >\r\n                        <GetAppRoundedIcon className={classes.extendedIcon} />\r\n                        Download\r\n                        </Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const downloadVideo = async (e)=>{\r\n        e.preventDefault();\r\n        // console.log(video.toDownload.itag);\r\n        if(process.env.NODE_ENV===\"production\"){\r\n            window.location.href=`${window.location.href}api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }else{\r\n            window.location.href=`http://localhost:5000/api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                YouTube Video Downloader\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={searchVideo}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={10}>\r\n                        <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        autoFocus\r\n                        required\r\n                        label=\"Enter URL\"\r\n                        placeholder=\"e.g. https://www.youtube.com/watch?v=wAD9uO9YAQw\"\r\n                        value={video.url}\r\n                        onChange={(e)=>dispatch({type:\"url\", payload:e.target.value})}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.btn}\r\n                        >\r\n                        Search\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n        <ShowVideoDetailsContainer/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, {useReducer} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport {Button, TextField, Typography} from '@material-ui/core';\r\nimport { InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport {ImageList, ImageListItem, ImageListItemBar} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GetAppRoundedIcon from '@material-ui/icons/GetAppRounded';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport { initialVideo, reducer } from '../reducers/YoutubeReducer';\r\nimport { sToTime, bytesToMb } from './Converters';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    btn: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(1.9),\r\n    },\r\n    videoDetailsContainer: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    downloadDropdownForm:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center'\r\n    }\r\n}));\r\n\r\nexport default function Text2() {\r\n    const [video, dispatch] = useReducer(reducer, initialVideo);\r\n    const classes = useStyles();\r\n\r\n    const searchVideo = async (e)=>{\r\n        try{\r\n            e.preventDefault();\r\n            dispatch( {type:\"toggleLoader\", payload:{'display':'block'}} );\r\n            const res= await axios.get(`/api/youtube/video-requiredInfo?url=${video.url.trim()}`);\r\n            dispatch( {type:\"toggleLoader\", payload:{'display':'none'}} );\r\n            const data= res.data;\r\n            // console.log(data);\r\n            let {title, thumbnail, lengthSeconds} = data;\r\n            dispatch( {type:\"details\", payload:{title, thumbnail, duration:sToTime(lengthSeconds)}} );\r\n            const formats = data.formats.filter(format=>{\r\n                return format.type === \"mp4\" && format.hasVideo && format.hasAudio\r\n            });\r\n            // console.log(formats);\r\n            dispatch( {type:\"formats\", payload:formats} );\r\n            dispatch( { type:\"toDownload\", payload:{ 'itag':formats[0].itag } } );\r\n        }catch(err){\r\n            dispatch( {type:\"toggleLoader\", payload:{'display':'none'}} );\r\n            if(err.response.status===404){\r\n                toast.error(err.response.data);\r\n                // console.log(err.response.data);\r\n            }else{\r\n                toast.error(\"Something Went Wrong, Try Later.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const ShowVideoDetailsContainer=()=>{\r\n        if(!video.formats.length){return ''}\r\n        return(\r\n            <>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n            <div className={classes.videoDetailsContainer}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <ImageList>\r\n                            <ImageListItem style={{'width':'100%'}}>\r\n                                <img src={video.details.thumbnail} alt={video.details.title} />\r\n                                <ImageListItemBar title={video.details.title} subtitle={<span>Duration: {video.details.duration}</span>} />\r\n                            </ImageListItem>\r\n                        </ImageList>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} className={classes.downloadDropdownForm}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"quality-dropdown\">Quality</InputLabel>\r\n                            <Select\r\n                            labelId=\"quality-dropdown\"\r\n                            value={video.toDownload.itag}\r\n                            label=\"Quality\"\r\n                            onChange={e=>dispatch({ type:'toDownload', payload:{'itag':e.target.value} })}\r\n                            >\r\n                            {\r\n                                video.formats.map((format, index)=>{\r\n                                    return(\r\n                                        <MenuItem key={index} value={format.itag}>\r\n                                            {format.type} - {format.qualityLabel} {format.contentLength ? ` - ${bytesToMb(format.contentLength)} Mb` : ''}\r\n                                        </MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Fab\r\n                        variant=\"extended\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"download\"\r\n                        onClick={downloadVideo}\r\n                        className={classes.btn}\r\n                        >\r\n                        <GetAppRoundedIcon className={classes.extendedIcon} />\r\n                        Download\r\n                        </Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const downloadVideo = async (e)=>{\r\n        e.preventDefault();\r\n        // console.log(video.toDownload.itag);\r\n        if(process.env.NODE_ENV===\"production\"){\r\n            window.location.href=`${window.location.href}api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }else{\r\n            window.location.href=`http://localhost:5000/api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                YouTube Video Downloader\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={searchVideo}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={10}>\r\n                        <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        autoFocus\r\n                        required\r\n                        label=\"Enter URL\"\r\n                        placeholder=\"e.g. https://www.youtube.com/watch?v=wAD9uO9YAQw\"\r\n                        value={video.url}\r\n                        onChange={(e)=>dispatch({type:\"url\", payload:e.target.value})}\r\n                        />\r\n                         <LinearProgress style={video.toggleLoader} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.btn}\r\n                        >\r\n                        Search\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n        <ShowVideoDetailsContainer/>\r\n        <ToastContainer position=\"top-center\" />\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport Test2 from './components/Test2';\n\nfunction App(){\n  return(\n    <>\n      <Navbar/>\n      {/* <HomePage/> */}\n      <Test2/>\n    </>\n  )\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    success:{\r\n      main: '#4caf50',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    youtube:{\r\n      main: '#FF0000'\r\n    }\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CssBaseline, ThemeProvider} from '@material-ui/core';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}