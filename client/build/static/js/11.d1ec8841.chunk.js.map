{"version":3,"sources":["components/Converters.js","components/pages/text_contents/DownloaderPageContent.js","reducers/VimeoReducer.js","components/pages/VimeoVideosDownloader.js"],"names":["sToTime","duration","seconds","parseInt","minutes","hours","bytesToMb","bytes","toFixed","HowToDownload","lazy","AvailableVideosDownloader","AboutDownloader","DownloaderPageContent","title","img","downloadSteps","description","fallback","initialVideo","reducer","video","action","type","url","payload","contentLength","formats","filter","format","map","TwitterVimeoVideoSearchResult","useStyles","makeStyles","theme","searchDiv","marginTop","spacing","display","flexDirection","alignItems","form","width","btn","padding","color","palette","primary","light","VimeoVideosDownloader","useReducer","dispatch","classes","searchVideo","e","a","preventDefault","toast","error","axios","get","trim","res","data","thumbnail","duration_sec","response","status","downloadVideo","window","location","href","origin","toDownload","details","Container","component","maxWidth","className","Typography","variant","noValidate","onSubmit","Grid","container","item","xs","sm","TextField","margin","fullWidth","autoFocus","required","label","placeholder","value","onChange","target","LinearProgress","style","toggleLoader","Button","position"],"mappings":"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","file":"static/js/11.d1ec8841.chunk.js","sourcesContent":["export const sToTime=(duration)=> {\r\n    let seconds= parseInt(duration % 60);\r\n    let minutes= duration / 60;\r\n    let hours= parseInt(minutes / 60);\r\n    minutes= parseInt(minutes % 60);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return(hours + \":\" + minutes + \":\" + seconds);\r\n}\r\n\r\nexport const bytesToMb=(bytes)=>{\r\n    const mb= bytes/1024/1024;\r\n    return mb.toFixed(1);\r\n}","import { lazy, Suspense } from \"react\";\r\nimport TopBarProgress from \"react-topbar-progress-indicator\";\r\nconst HowToDownload = lazy(() => import(\"../common/HowToDownload\"));\r\nconst AvailableVideosDownloader = lazy(() =>\r\n  import(\"../common/AvailableDownloaders\")\r\n);\r\nconst AboutDownloader = lazy(() => import(\"../common/AboutDownloader\"));\r\n\r\nconst DownloaderPageContent = ({title, img, downloadSteps, description}) => {\r\n  return (\r\n    <>\r\n      <HowToDownload\r\n        title={title}\r\n        img={img}\r\n        downloadSteps={downloadSteps}\r\n      />\r\n      <Suspense fallback={<TopBarProgress />}>\r\n        <AvailableVideosDownloader />\r\n        <AboutDownloader\r\n          title={title}\r\n          description={description}\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloaderPageContent;\r\n","export const initialVideo={\r\n    'toggleLoader':{ 'display':'none' },\r\n    'url': '',\r\n    'toDownload': { 'url':'', 'contentLength':'' },\r\n    'details': {},\r\n    'formats':[]\r\n}\r\n\r\nexport const reducer = (video, action) => {\r\n    if(action.type && action.type===\"toDownload\"){\r\n        const url= action.payload.url;\r\n        const contentLength= video.formats.filter((format)=>{\r\n            return format.url===url\r\n        }).map((format)=>{return format.contentLength})[0];\r\n        video= { ...video, [action.type]:{url, contentLength:parseInt(contentLength)}}\r\n    }else if(action.type){\r\n        video= { ...video, [action.type]:action.payload };\r\n    }\r\n    return video;\r\n}","import { lazy, Suspense } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { initialVideo, reducer } from \"../../reducers/VimeoReducer\";\r\nimport { sToTime } from \"../Converters\";\r\nimport DownloaderPageContent from \"./text_contents/DownloaderPageContent\";\r\nconst TwitterVimeoVideoSearchResult = lazy(() =>\r\n  import(\"./text_contents/TwitterVimeoVideoSearchResult\")\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchDiv: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  btn: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1.9),\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nconst VimeoVideosDownloader = () => {\r\n  const [video, dispatch] = useReducer(reducer, initialVideo);\r\n  const classes = useStyles();\r\n\r\n  const downloadSteps = [\r\n    \"Copy the URL of the video which you need to download.\",\r\n    \"Paste URL in the search field and click “Get Video”.\",\r\n    \"Choose the Video Quality that you want to Download.\",\r\n    \"Click the “Download” button to start downloading the file.\",\r\n  ];\r\n  const AboutDownloaderDescription = `DownTape Vimeo video downloader provides fastest service to download\r\n      videos in mp4, mp3, SQ, HD, Full HD quality from Vimeo! For more\r\n      convenient viewing on a large screen video can be saved in high\r\n      quality. To watch videos on Android or iOS phones the medium\r\n      quality will be enough.`;\r\n\r\n  const searchVideo = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      if (video.url === \"\") {\r\n        toast.error(\"Please Enter Link!\");\r\n        return;\r\n      }\r\n      dispatch({ type: \"toggleLoader\", payload: { display: \"block\" } });\r\n      const res = await axios.get(`/api/vimeo/info?url=${video.url.trim()}`);\r\n      dispatch({ type: \"toggleLoader\", payload: { display: \"none\" } });\r\n      const data = res.data;\r\n      // console.log(data);\r\n      let { title, thumbnail, duration_sec, formats } = data;\r\n      dispatch({\r\n        type: \"details\",\r\n        payload: { title, thumbnail, duration: sToTime(duration_sec) },\r\n      });\r\n      dispatch({ type: \"formats\", payload: formats });\r\n      dispatch({ type: \"toDownload\", payload: { url: formats[0].url } });\r\n    } catch (err) {\r\n      dispatch({ type: \"toggleLoader\", payload: { display: \"none\" } });\r\n      if (err.response.status === 404) {\r\n        toast.error(err.response.data);\r\n        // console.log(err.response.data);\r\n      } else {\r\n        toast.error(\"Something Went Wrong, Try Later.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const downloadVideo = async (e) => {\r\n    e.preventDefault();\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      window.location.href = `${window.location.origin}/api/vimeo/download?url=${video.toDownload.url}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n    } else {\r\n      window.location.href = `http://localhost:5000/api/vimeo/download?url=${video.toDownload.url}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Vimeo Videos Downloader - DOWNTAPE Free Vimeo Downloader Online\r\n        </title>\r\n        {/* <link rel=\"canonical\" href=\"https://www.downtape.herokuapp.com/youtube-video-downloader\" />\r\n                <meta name=\"description\" content=\"Download YouTube videos Online Free on DOWNTAPE. We provides you the best YouTube video downloader, In which you can download YouTube videos in mp4\"/>\r\n                <meta name=\"keywords\" content=\"youtube video download, youtube video download online, online youtube video download, free youtube video download, youtube video download by link, youtube video download free, save youtube video download, youtube video download pc, youtube video download link, youtube video download website, how to youtube video download, youtube video download site, youtube video download mp4, youtube video download online free, youtube video downloader, online youtube video downloader, youtube video downloader for pc, youtube video downloader free download, best youtube video downloader, free youtube video downloader, download youtube video, download youtube videos, how to download youtube video, how to download youtube video in laptop, how download youtube video, how to download youtube videos in mobile, download youtube video online, how to download youtube video online, download youtube video online free, how download youtube video online\" /> */}\r\n      </Helmet>\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <div className={classes.searchDiv}>\r\n          <Typography component=\"h1\" variant=\"h4\">\r\n            <span className={classes.title}>Vimeo</span> Video Downloader\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={searchVideo}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={10}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  autoFocus\r\n                  required\r\n                  label=\"Enter Link\"\r\n                  placeholder=\"e.g. https://vimeo.com/147697561\"\r\n                  value={video.url}\r\n                  onChange={(e) =>\r\n                    dispatch({ type: \"url\", payload: e.target.value })\r\n                  }\r\n                />\r\n                <LinearProgress style={video.toggleLoader} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.btn}\r\n                >\r\n                  Get Video\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n      <Suspense fallback=\"\">\r\n        <TwitterVimeoVideoSearchResult\r\n          video={video}\r\n          dispatch={dispatch}\r\n          downloadVideo={downloadVideo}\r\n        />\r\n      </Suspense>\r\n      <DownloaderPageContent\r\n        title=\"Vimeo\"\r\n        img=\"vimeo.jpg\"\r\n        downloadSteps={downloadSteps}\r\n        description={AboutDownloaderDescription}\r\n      />\r\n      <ToastContainer position=\"top-center\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VimeoVideosDownloader;\r\n"],"sourceRoot":""}