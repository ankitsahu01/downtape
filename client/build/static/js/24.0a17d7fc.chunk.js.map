{"version":3,"sources":["components/pages/text_contents/VideoDetailsContainer.js"],"names":["useStyles","makeStyles","theme","form","width","marginTop","spacing","btn","padding","DetailsContainer","marginBottom","formControl","margin","downloadDropdownForm","display","flexDirection","justifyContent","VideoDetailsContainer","video","dispatch","downloadVideo","classes","formats","length","component","maxWidth","id","className","container","item","xs","sm","style","src","details","thumbnail","alt","title","subtitle","duration","variant","htmlFor","labelId","value","toDownload","itag","label","onChange","e","type","payload","target","map","format","index","fontFamily","qualityLabel","contentLength","bytesToMb","size","color","aria-label","onClick","extendedIcon"],"mappings":"mGAAA,kKAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BC,IAAK,CACHF,UAAWH,EAAMI,QAAQ,GACzBE,QAASN,EAAMI,QAAQ,MAEzBG,iBAAkB,CAChBJ,UAAWH,EAAMI,QAAQ,GACzBI,aAAcR,EAAMI,QAAQ,IAE9BK,YAAa,CACXC,OAAQV,EAAMI,QAAQ,IAExBO,qBAAsB,CACpBC,QAAS,OACTC,cAAe,SACfC,eAAgB,cA8ELC,UA1Ee,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC1CC,EAAUrB,IAChB,OAAKkB,EAAMI,QAAQC,OAIjB,mCACE,cAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,GAAG,gBAA7C,SACE,qBAAKC,UAAWN,EAAQZ,iBAAxB,SACE,eAAC,IAAD,CAAMmB,WAAS,EAACtB,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMuB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,MAAO,CAAE5B,MAAO,QAA/B,UACE,qBACE6B,IAAKf,EAAMgB,QAAQC,UACnBC,IAAKlB,EAAMgB,QAAQG,QAErB,cAAC,IAAD,CACEA,MAAOnB,EAAMgB,QAAQG,MACrBC,SAAU,+BAAOpB,EAAMgB,QAAQK,oBAKvC,eAAC,IAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWN,EAAQR,qBAA7C,UACE,eAAC,IAAD,CAAa2B,QAAQ,WAAWb,UAAWN,EAAQV,YAAnD,UACE,cAAC,IAAD,CAAY8B,QAAQ,mBAApB,2BAGA,cAAC,IAAD,CACEC,QAAQ,mBACRC,MAAOzB,EAAM0B,WAAWC,KACxBC,MAAM,gBACNC,SAAU,SAACC,GAAD,OACR7B,EAAS,CACP8B,KAAM,aACNC,QAAS,CAAEL,KAAMG,EAAEG,OAAOR,UAPhC,SAWGzB,EAAMI,QAAQ8B,KAAI,SAACC,EAAQC,GAC1B,OACE,cAAC,IAAD,CAAsBX,MAAOU,EAAOR,KAApC,SACE,eAAC,IAAD,CAAKU,WAAW,YAAhB,UACG,IACAF,EAAOG,aAAc,IACrBH,EAAOI,cAAP,aACSC,YAAUL,EAAOI,eAD1B,OAEG,OANOH,WAavB,eAAC,IAAD,CACEd,QAAQ,WACRmB,KAAK,QACLC,MAAM,YACNC,aAAW,WACXC,QAAS1C,EACTO,UAAWN,EAAQd,IANrB,UAQE,cAAC,IAAD,CAAmBoB,UAAWN,EAAQ0C,eARxC,0BApDH","file":"static/js/24.0a17d7fc.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport GetAppRoundedIcon from \"@material-ui/icons/GetAppRounded\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { bytesToMb } from \"../../Converters\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  btn: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1.9),\r\n  },\r\n  DetailsContainer: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  downloadDropdownForm: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst VideoDetailsContainer = ({ video, dispatch, downloadVideo }) => {\r\n  const classes = useStyles();\r\n  if (!video.formats.length) {\r\n    return \"\";\r\n  }\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"md\" id=\"search-result\">\r\n        <div className={classes.DetailsContainer}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <ImageList>\r\n                <ImageListItem style={{ width: \"100%\" }}>\r\n                  <img\r\n                    src={video.details.thumbnail}\r\n                    alt={video.details.title}\r\n                  />\r\n                  <ImageListItemBar\r\n                    title={video.details.title}\r\n                    subtitle={<span>{video.details.duration}</span>}\r\n                  />\r\n                </ImageListItem>\r\n              </ImageList>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.downloadDropdownForm}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"quality-dropdown\">\r\n                  Video Quality\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"quality-dropdown\"\r\n                  value={video.toDownload.itag}\r\n                  label=\"Video Quality\"\r\n                  onChange={(e) =>\r\n                    dispatch({\r\n                      type: \"toDownload\",\r\n                      payload: { itag: e.target.value },\r\n                    })\r\n                  }\r\n                >\r\n                  {video.formats.map((format, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={format.itag}>\r\n                        <Box fontFamily=\"Monospace\">\r\n                          {\" \"}\r\n                          {format.qualityLabel}{\" \"}\r\n                          {format.contentLength\r\n                            ? ` - ${bytesToMb(format.contentLength)} Mb`\r\n                            : \"\"}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n              <Fab\r\n                variant=\"extended\"\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                aria-label=\"download\"\r\n                onClick={downloadVideo}\r\n                className={classes.btn}\r\n              >\r\n                <GetAppRoundedIcon className={classes.extendedIcon} />\r\n                Download\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoDetailsContainer;\r\n"],"sourceRoot":""}