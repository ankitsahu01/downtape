{"version":3,"sources":["reducers/YoutubeReducer.js","components/Converters.js","components/Test.js","App.js","reportWebVitals.js","index.js"],"names":["initialVideo","reducer","video","action","type","itag","parseInt","payload","contentLength","formats","filter","format","map","sToTime","duration","seconds","minutes","hours","bytesToMb","bytes","toFixed","Test","useReducer","dispatch","searchVideo","e","a","preventDefault","axios","get","url","trim","res","data","title","thumbnail","lengthSeconds","hasVideo","hasAudio","ShowVideoDetailsContainer","length","details","src","className","alt","onSubmit","downloadVideo","onChange","target","value","toDownload","index","qualityLabel","window","location","href","method","required","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab2a3da.chunk.js","sourcesContent":["export const initialVideo={\r\n    'url': '',\r\n    'toDownload': { 'itag':'', 'contentLength':'' },\r\n    'details': {},\r\n    'formats':[]\r\n}\r\n\r\nexport const reducer = (video, action) => {\r\n    if(action.type && action.type===\"toDownload\"){\r\n        const itag= parseInt(action.payload.itag);\r\n        const contentLength= video.formats.filter((format)=>{\r\n            return format.itag===itag\r\n        }).map((format)=>{return format.contentLength})[0];\r\n        video= { ...video, [action.type]:{itag, contentLength:parseInt(contentLength)}}\r\n    }else if(action.type){\r\n        video= { ...video, [action.type]:action.payload };\r\n    }\r\n    return video;\r\n}","export const sToTime=(duration)=> {\r\n    let seconds= parseInt(duration % 60);\r\n    let minutes= duration / 60;\r\n    let hours= parseInt(minutes / 60);\r\n    minutes= parseInt(minutes % 60);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return(hours + \":\" + minutes + \":\" + seconds);\r\n}\r\n\r\nexport const bytesToMb=(bytes)=>{\r\n    const mb= bytes/1024/1024;\r\n    return mb.toFixed(1);\r\n}","import React,{ useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { initialVideo, reducer } from '../reducers/YoutubeReducer';\r\nimport { sToTime, bytesToMb } from './Converters';\r\n\r\nconst Test = () => {\r\n    const [video, dispatch] = useReducer(reducer, initialVideo);\r\n\r\n    const searchVideo = async (e)=>{\r\n        e.preventDefault();\r\n        const res= await axios.get(`/api/youtube/video-requiredInfo?url=${video.url.trim()}`);\r\n        const data= res.data;\r\n        // console.log(data);\r\n        let {title, thumbnail, lengthSeconds} = data;\r\n        dispatch( {type:\"details\", payload:{title, thumbnail, duration:sToTime(lengthSeconds)}} );\r\n        const formats = data.formats.filter(format=>{\r\n            return format.type === \"mp4\" && format.hasVideo && format.hasAudio\r\n        });\r\n        // console.log(formats);\r\n        dispatch( {type:\"formats\", payload:formats} );\r\n        dispatch( { type:\"toDownload\", payload:{ 'itag':formats[0].itag } } );\r\n    }\r\n\r\n    const ShowVideoDetailsContainer=()=>{\r\n        if(!video.formats.length){return ''}\r\n        return(\r\n            <>\r\n            <h2>{video.details.title}</h2>\r\n            <img src={video.details.thumbnail} className=\"thumbnail\" alt={video.details.title} />\r\n            <p>Duration {video.details.duration}</p>\r\n            <form onSubmit={downloadVideo}>\r\n                <select onChange={e=>dispatch({ type:'toDownload', payload:{'itag':e.target.value} })} value={video.toDownload.itag} >\r\n                {\r\n                    video.formats.map((format, index)=>{\r\n                        return(\r\n                            <option key={index} value={format.itag}>\r\n                                {format.type} - {format.qualityLabel} {format.contentLength ? ` - ${bytesToMb(format.contentLength)} MB` : ''}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n                </select>\r\n                <button className=\"btn green-btn\">Download</button>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const downloadVideo = async (e)=>{\r\n        e.preventDefault();\r\n        // console.log(video.toDownload.itag);\r\n        if(process.env.NODE_ENV===\"production\"){\r\n            window.location.href=`${window.location.href}api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }else{\r\n            window.location.href=`http://localhost:5000/api/youtube/download?url=${video.url}&itag=${video.toDownload.itag}&clen=${video.toDownload.contentLength}&title=${video.details.title}`;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n         <div className=\"container hv-center\">\r\n            <h1 className=\"heading\">YouTube Video Downloader</h1>\r\n            <form action=\"\" method=\"POST\" className=\"s-form\" onSubmit={searchVideo}>\r\n                <input type=\"text\" className=\"url-input\" required={true}\r\n                    placeholder=\"Video URL e.g. https://www.youtube.com/watch?v=wAD9uO9YAQw\" \r\n                        value={video.url} onChange={(e)=>dispatch({type:\"url\", payload:e.target.value})}\r\n                    />\r\n                <button className=\"btn green-btn\">Search</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"container\">\r\n            <ShowVideoDetailsContainer/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test;\r\n","import './App.css';\nimport React from 'react';\nimport HomePage from './components/HomePage';\nimport Test from './components/Test';\n\nfunction App(){\n  return(\n    <>\n      {/* <HomePage/> */}\n      <Test/>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}